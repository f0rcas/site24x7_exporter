name: Build release binaries (and publish them if this is a tag)

on: [push, pull_request]

jobs:
  binaries:
    name: Binary ${{ matrix.target }} (on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            cross: true
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            cross: true
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            cross: true
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            cross: true
          - os: ubuntu-latest
            target: armv7-unknown-linux-musleabihf
            cross: true
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            cross: true
          - os: ubuntu-latest
            target: arm-unknown-linux-musleabihf
            cross: true
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            cross: false
          - os: macos-latest
            target: x86_64-apple-darwin
            cross: false
          - os: ubuntu-latest
            target: x86_64-unknown-freebsd
            cross: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - run: sudo apt install musl-tools
        if: startsWith(matrix.os, 'ubuntu')

      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --target=${{ matrix.target }}
          use-cross: ${{ matrix.cross }}

      - name: Set exe extension for Windows
        run: echo "EXE=.exe" >> $env:GITHUB_ENV
        if: startsWith(matrix.os, 'windows')

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/site24x7_exporter${{ env.EXE }}

      - name: Get version from tag
        id: extract_version
        run: |
          echo ::set-output name=version::${GITHUB_REF_NAME#v}
        shell: bash

      - name: Get CHANGELOG.md entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2.2.0
        with:
          version: ${{ steps.extract_version.outputs.version }}
          path: ./CHANGELOG.md
        if: startsWith(github.ref_name, 'v') && github.ref_type == 'tag'

      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target }}/release/site24x7_exporter${{ env.EXE }}
          tag: ${{ github.ref_name }}
          asset_name: site24x7_exporter-${{ steps.extract_version.outputs.version }}-${{ matrix.target }}${{ env.EXE }}
          body: ${{ steps.changelog_reader.outputs.log_entry }}
        if: startsWith(github.ref_name, 'v') && github.ref_type == 'tag'

  container-images:
    name: Publish images
    runs-on: ubuntu-latest
    needs: binaries

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifact aarch64-unknown-linux-gnu
        uses: actions/download-artifact@v3
        with:
          name: aarch64-unknown-linux-gnu
          path: target/aarch64-unknown-linux-gnu/release

      - name: Download artifact x86_64-unknown-linux-gnu
        uses: actions/download-artifact@v3
        with:
          name: x86_64-unknown-linux-gnu
          path: target/x86_64-unknown-linux-gnu/release

      - name: Download artifact armv7-unknown-linux-gnueabihf
        uses: actions/download-artifact@v3
        with:
          name: armv7-unknown-linux-gnueabihf
          path: target/armv7-unknown-linux-gnueabihf/release

      - name: podman login
        run: podman login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }} docker.io

      - name: podman build linux/arm64
        run: podman build --format docker --platform linux/arm64/v8 --manifest site24x7_exporter -f Containerfile target/aarch64-unknown-linux-gnu/release

      - name: podman build linux/amd64
        run: podman build --format docker --platform linux/amd64 --manifest site24x7_exporter -f Containerfile target/x86_64-unknown-linux-gnu/release

      - name: podman build linux/arm
        run: podman build --format docker --platform linux/arm/v7 --manifest site24x7_exporter -f Containerfile target/armv7-unknown-linux-gnueabihf/release

      - run: podman manifest inspect site24x7_exporter

      - name: podman manifest push latest
        run: podman manifest push site24x7_exporter docker.io/svenstaro/site24x7_exporter:latest

      - name: podman manifest push tag version
        run: podman manifest push site24x7_exporter docker.io/svenstaro/site24x7_exporter:${{ needs.binaries.outputs.version }}
        if: startsWith(github.ref_name, 'v')
